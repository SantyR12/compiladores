# Generated from SwitchLang.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,119,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,
        1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,
        1,17,5,17,86,8,17,10,17,12,17,89,9,17,1,18,4,18,92,8,18,11,18,12,
        18,93,1,18,1,18,4,18,98,8,18,11,18,12,18,99,3,18,102,8,18,1,19,1,
        19,5,19,106,8,19,10,19,12,19,109,9,19,1,19,1,19,1,20,4,20,114,8,
        20,11,20,12,20,115,1,20,1,20,0,0,21,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,1,0,5,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,
        95,97,122,1,0,48,57,3,0,10,10,13,13,39,39,3,0,9,10,13,13,32,32,124,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,1,43,1,0,0,0,3,46,1,0,0,0,5,51,1,0,0,0,7,53,1,0,0,0,9,55,
        1,0,0,0,11,57,1,0,0,0,13,59,1,0,0,0,15,61,1,0,0,0,17,63,1,0,0,0,
        19,65,1,0,0,0,21,67,1,0,0,0,23,69,1,0,0,0,25,71,1,0,0,0,27,73,1,
        0,0,0,29,76,1,0,0,0,31,79,1,0,0,0,33,81,1,0,0,0,35,83,1,0,0,0,37,
        91,1,0,0,0,39,103,1,0,0,0,41,113,1,0,0,0,43,44,5,105,0,0,44,45,5,
        102,0,0,45,2,1,0,0,0,46,47,5,101,0,0,47,48,5,108,0,0,48,49,5,115,
        0,0,49,50,5,101,0,0,50,4,1,0,0,0,51,52,5,40,0,0,52,6,1,0,0,0,53,
        54,5,41,0,0,54,8,1,0,0,0,55,56,5,123,0,0,56,10,1,0,0,0,57,58,5,125,
        0,0,58,12,1,0,0,0,59,60,5,61,0,0,60,14,1,0,0,0,61,62,5,43,0,0,62,
        16,1,0,0,0,63,64,5,45,0,0,64,18,1,0,0,0,65,66,5,42,0,0,66,20,1,0,
        0,0,67,68,5,47,0,0,68,22,1,0,0,0,69,70,5,62,0,0,70,24,1,0,0,0,71,
        72,5,60,0,0,72,26,1,0,0,0,73,74,5,61,0,0,74,75,5,61,0,0,75,28,1,
        0,0,0,76,77,5,33,0,0,77,78,5,61,0,0,78,30,1,0,0,0,79,80,5,59,0,0,
        80,32,1,0,0,0,81,82,5,58,0,0,82,34,1,0,0,0,83,87,7,0,0,0,84,86,7,
        1,0,0,85,84,1,0,0,0,86,89,1,0,0,0,87,85,1,0,0,0,87,88,1,0,0,0,88,
        36,1,0,0,0,89,87,1,0,0,0,90,92,7,2,0,0,91,90,1,0,0,0,92,93,1,0,0,
        0,93,91,1,0,0,0,93,94,1,0,0,0,94,101,1,0,0,0,95,97,5,46,0,0,96,98,
        7,2,0,0,97,96,1,0,0,0,98,99,1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,
        100,102,1,0,0,0,101,95,1,0,0,0,101,102,1,0,0,0,102,38,1,0,0,0,103,
        107,5,39,0,0,104,106,8,3,0,0,105,104,1,0,0,0,106,109,1,0,0,0,107,
        105,1,0,0,0,107,108,1,0,0,0,108,110,1,0,0,0,109,107,1,0,0,0,110,
        111,5,39,0,0,111,40,1,0,0,0,112,114,7,4,0,0,113,112,1,0,0,0,114,
        115,1,0,0,0,115,113,1,0,0,0,115,116,1,0,0,0,116,117,1,0,0,0,117,
        118,6,20,0,0,118,42,1,0,0,0,7,0,87,93,99,101,107,115,1,6,0,0
    ]

class SwitchLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    IF = 1
    ELSE = 2
    LPAREN = 3
    RPAREN = 4
    LBRACE = 5
    RBRACE = 6
    ASSIGN = 7
    PLUS = 8
    MINUS = 9
    MUL = 10
    DIV = 11
    GT = 12
    LT = 13
    EQ = 14
    NEQ = 15
    SEMI = 16
    SEMA = 17
    IDENTIFIER = 18
    NUMBER = 19
    STRING = 20
    WS = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'if'", "'else'", "'('", "')'", "'{'", "'}'", "'='", "'+'", 
            "'-'", "'*'", "'/'", "'>'", "'<'", "'=='", "'!='", "';'", "':'" ]

    symbolicNames = [ "<INVALID>",
            "IF", "ELSE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "ASSIGN", 
            "PLUS", "MINUS", "MUL", "DIV", "GT", "LT", "EQ", "NEQ", "SEMI", 
            "SEMA", "IDENTIFIER", "NUMBER", "STRING", "WS" ]

    ruleNames = [ "IF", "ELSE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
                  "ASSIGN", "PLUS", "MINUS", "MUL", "DIV", "GT", "LT", "EQ", 
                  "NEQ", "SEMI", "SEMA", "IDENTIFIER", "NUMBER", "STRING", 
                  "WS" ]

    grammarFileName = "SwitchLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


